>>>>>>> Tareas Sergio <<<<<<<<<

REALIZADO - crear personajes (isaac, magdalena, cain, judas, ???, eva, samson, azazel)
REALIZADO - comprobar las tablas para ver si hay errores
REALIZADO - modificar clase objetos para que pille las stats que mejorar (velocidad, daño, lagrimas, alcance, velocidadProyectil, suerte, vida)
REALIZADO - modificar lo que tenga que ver con personajes para cambiar el daño inicial por multiplicador inicial
REALIZADO - Crear CRUD de personajes
REALIZADO - Crear Items
REALIZADO - Eliminar personaje al cambiar de personaje


 >>>>>>>> Tareas Aman <<<<<<<<<

REALIZADO - menu con personajes
REALIZADO - asignar botones y llamar funcion pasandole el nombre

REALIZADO - empezar con menu stats
REALIZADO - crear menu stats básico (👞velocidad, ⚔daño, 💧lagrimas, 🏹alcance, 💦velocidadProyectil, 🍀suerte, ❤vida)

REALIZADO - hacer hueco para los consumibles y el objeto activo

REALIZADO - poner botones de añadir y quitar objetos + combobox para seleccionar el tipo de habitación

REALIZADO - hacer el filtrado por pool (ponerle un botón)

REALIZADO - poner al lado de la tabla los items que se eligan

REALIZADO - cargar la tabla de objetos / cargar la tabla de objetos y enseñar sus stats junto a nombre y descripcion

>>>>>>> Tareas Extra <<<<<<<

REALIZADO - Vincular botones añadir y eliminar objetos con la tabla de objetos (si es pasivo tabla, activo arriba, consumible abajo)
REALIZADO - Crear query que coja el último activo
REALIZADO - Crear query que coja el último consumible

REALIZADO - Cargar los datos seleccionados en el Inventario

REALIZADO - Hacer lo de que se vea el objeto activo y el consumible

REALIZADO - Hacer otra tabla o en la misma para filtrar los objetos por pools
REALIZADO - Query tocha para obtener los objetos que estén en la relacion objetoPool y pillar la pool para ver el nombre de la habitación asignada

- Pensar en cómo vamos a hacer para que las stats de la izq suban conforme los items que tenemos (solo pasivos)

- CRUD?

- Hacer un submenú para crear y borrar objetos ??? (skipeable)

- Testing JUnit